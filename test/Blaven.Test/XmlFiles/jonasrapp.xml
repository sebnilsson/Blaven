<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?>
<feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/' xmlns:blogger='http://schemas.google.com/blogger/2008' xmlns:georss='http://www.georss.org/georss' xmlns:gd='http://schemas.google.com/g/2005' xmlns:thr='http://purl.org/syndication/thread/1.0'>
  <id>tag:blogger.com,1999:blog-3534158126191039150</id>
  <updated>2012-10-23T09:45:32.507+02:00</updated>
  <category term='Ribbon'/>
  <category term='Tools'/>
  <category term='Customization'/>
  <category term='Plugin'/>
  <category term='Rollup'/>
  <category term='Community'/>
  <category term='Forms'/>
  <category term='JavaScript'/>
  <title type='text'>Jonas Rapp's CRM Trenches</title>
  <subtitle type='html'></subtitle>
  <link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default'/>
  <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default'/>
  <link rel='alternate' type='text/html' href='http://jonasrapp.cinteros.se/'/>
  <link rel='hub' href='http://pubsubhubbub.appspot.com/'/>
  <author>
    <name>Jonas Rapp</name>
    <uri>https://plus.google.com/109176631335910576528</uri>
    <email>noreply@blogger.com</email>
    <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//lh6.googleusercontent.com/-R_XLzSOOvqs/AAAAAAAAAAI/AAAAAAAAAsk/wfsnAqqNsCw/s512-c/photo.jpg'/>
  </author>
  <generator version='7.00' uri='http://www.blogger.com'>Blogger</generator>
  <openSearch:totalResults>10</openSearch:totalResults>
  <openSearch:startIndex>1</openSearch:startIndex>
  <openSearch:itemsPerPage>25</openSearch:itemsPerPage>
  <entry>
    <id>tag:blogger.com,1999:blog-3534158126191039150.post-3776549820754361006</id>
    <published>2012-10-12T10:00:00.000+02:00</published>
    <updated>2012-10-22T16:11:55.901+02:00</updated>
    <category scheme='http://www.blogger.com/atom/ns#' term='Customization'/>
    <category scheme='http://www.blogger.com/atom/ns#' term='Plugin'/>
    <category scheme='http://www.blogger.com/atom/ns#' term='Community'/>
    <title type='text'>CRM 2011: Multiple Cascade Delete – part 2</title>
    <content type='html'>
      &lt;p&gt;         In my previous post &lt;a href="http://jonasrapp.cinteros.se/2012/10/CascadeDelete1.html"&gt;             CRM 2011: Multiple Cascade Delete – part 1&lt;/a&gt; I discussed the limitations in         relationship behavior configuration for manual intersect entities, and proposed         a solution with a plugin and a configuration entity.&lt;/p&gt;     &lt;blockquote&gt;         &lt;p&gt;             &lt;strong&gt;In this post I will go into the details of the plugin and how it is registered.&lt;/strong&gt;&lt;/p&gt;     &lt;/blockquote&gt;     &lt;p&gt;         I will not go into the basics of writing a plugin, there are &lt;a href="http://msdn.microsoft.com/en-us/library/gg594416.aspx" target="_blank"&gt;tons of examples&lt;/a&gt; out there.&lt;br&gt;         You need to be somewhat familiar with the &lt;a href="http://msdn.microsoft.com/en-us/library/gg327941.aspx" target="_blank"&gt;event execution pipeline&lt;/a&gt; in Microsoft Dynamics CRM 2011         and the &lt;a href="http://msdn.microsoft.com/en-us/library/microsoft.xrm.sdk.aspx" target="_blank"&gt;SDK classes&lt;/a&gt; used when developing plugins using late binding.&lt;/p&gt;     &lt;h2&gt;         Objective&lt;/h2&gt;     &lt;p&gt;         Consider the following entity model:&lt;br&gt;     &lt;/p&gt;     &lt;p&gt;         &lt;a href="http://lh4.ggpht.com/-nCz6QalSZus/UHfLfYxDz6I/AAAAAAAAAv8/4gEYRpJUTbQ/s1600-h/AccountContact2%25255B19%25255D.png" target="_blank"&gt;             &lt;img style="margin: 0px auto; display: block; float: none" title="AccountContact2" alt="AccountContact2" src="http://lh6.ggpht.com/-F_n6ulMRZDc/UHfLgZjFfuI/AAAAAAAAAwE/tvDJ0bAA3Ps/AccountContact2_thumb%25255B15%25255D.png?imgmax=800" width="478" height="238"&gt;&lt;/a&gt;&lt;br&gt;         Role records should be deleted if either the associated contact or account is deleted,         but only one of the relations can be configured with cascade delete. Responsibility         records should be deleted if associated Role is deleted.&lt;/p&gt;     &lt;p&gt;         The goal is to accomplish this through a generic plugin that is configured using         a dedicated CRM entity.&lt;/p&gt;     &lt;h2&gt;         Plugin overview&lt;/h2&gt;     &lt;p&gt;         The plugin will contain three main blocks&lt;/p&gt;     &lt;ol&gt;         &lt;li&gt;Configuration cache being loaded on demand and cleared whenever a Cascade Delete             rule is being changed.&lt;/li&gt;         &lt;li&gt;Pre Validation step to retrieve all child records that should be deleted prior to             the parent record being deleted.&lt;/li&gt;         &lt;li&gt;Pre Operation step to perform the deletion of retrieved child records.&lt;/li&gt;&lt;/ol&gt;     &lt;p&gt;         The reason for separating block 2 and 3 is described in more detail in the previous         post.&lt;/p&gt;     &lt;a name='more'&gt;&lt;/a&gt;     &lt;h2&gt;         1. Plugin configuration&lt;/h2&gt;     &lt;p&gt;         I use an &lt;code&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/gg327578.aspx" target="_blank"&gt;             EntityCollection&lt;/a&gt;&lt;/code&gt; as a cache for all Cascade Delete rules defined         in the configuration entity (see previous post).&lt;/p&gt;     &lt;pre class="brush: csharp"&gt;public class CascadeDelete : IPlugin
      {
      private EntityCollection _cascadeDeleteRules = null;
      &lt;/pre&gt;
      &lt;p&gt;
      If the plugin is triggered by a change to any of these rules, it should be cleared
      to force a reload on next delete message from CRM.&lt;/p&gt;
      &lt;pre class="brush: csharp"&gt;if (context.PrimaryEntityName == "jr_cascade_delete" &amp;amp;&amp;amp;
      (context.MessageName == "Create" ||
      context.MessageName == "Update" ||
      context.MessageName == "Delete"))
      {
      tracer.Trace("Cascade Delete rule changed, clearing cache");
      _cascadeDeleteRules = null;
      return;
      }
      &lt;/pre&gt;
      &lt;p&gt;
      When the plugin is triggered by an entity being deleted, the cache is loaded if
      it has not already been loaded.&lt;/p&gt;
      &lt;pre class="brush: csharp"&gt;if (_cascadeDeleteRules == null)
      {
      QueryByAttribute query = new QueryByAttribute("jr_cascade_delete");
      query.AddAttributeValue("statecode", 0);
      query.ColumnSet = new ColumnSet("jr_parent_entity", "jr_child_entity", "jr_lookup_attribute");
      _cascadeDeleteRules = service.RetrieveMultiple(query);
      }
      &lt;/pre&gt;
      &lt;h2&gt;
      2. Pre Validation – Retrieve children to delete&lt;/h2&gt;
      &lt;p&gt;
      In this block, all rules in the cache will be examined to determine for each rule
      if it is applicable to the (parent) entity being deleted.&lt;/p&gt;
      &lt;pre class="brush: csharp"&gt;EntityCollection RecordsToDelete = new EntityCollection();
      foreach (Entity rule in _cascadeDeleteRules.Entities)
      {
      string parent = (string)rule["jr_parent_entity"];
      string child = (string)rule["jr_child_entity"];
      string attribute = (string)rule["jr_lookup_attribute"];
      tracer.Trace("Relation: {0} {1} {2}", parent, child, attribute);
      if (parent == context.PrimaryEntityName)
      {
      ...
      }
      }
      &lt;/pre&gt;
      &lt;p&gt;
      The collection &lt;code&gt;RecordsToDelete&lt;/code&gt; is used to contain all child records,
      regardless of child entity type, that shall be deleted according to all applicable
      rules.&lt;/p&gt;
      &lt;p&gt;
      This list is populated from the child entities defined in the rules in this way.&lt;/p&gt;
      &lt;pre class="brush: csharp"&gt;QueryByAttribute qba = new QueryByAttribute(child);
      qba.AddAttributeValue(attribute, context.PrimaryEntityId);
      EntityCollection relatingEntities = service.RetrieveMultiple(qba);
      tracer.Trace("Found {0} {1} to delete", relatingEntities.Entities.Count, child);
      RecordsToDelete.Entities.AddRange(relatingEntities.Entities);
      &lt;/pre&gt;
      &lt;p&gt;
      After iterating through all rules, the collection of child records to delete is
      added to the &lt;code&gt;SharedVariables&lt;/code&gt; collection of the &lt;a href="http://msdn.microsoft.com/en-us/library/microsoft.xrm.sdk.ipluginexecutioncontext.aspx" target="_blank"&gt;context&lt;/a&gt;.&lt;/p&gt;
      &lt;pre class="brush: csharp"&gt;if (RecordsToDelete.Entities.Count &amp;gt; 0)
      {
      tracer.Trace("Adding total of {0} records to delete to SharedVariables", RecordsToDelete.Entities.Count);
      context.SharedVariables.Add(sharedVarName, RecordsToDelete);
      }
      &lt;/pre&gt;
      &lt;p&gt;
      The &lt;code&gt;sharedVarName&lt;/code&gt; variable is defined based on entityname and id of
      the record being deleted.&lt;/p&gt;
      &lt;h2&gt;
      3. Pre Operation – Delete children&lt;/h2&gt;
      &lt;p&gt;
      This block is quite straightforward. If there is a collection of entities in the
      &lt;code&gt;SharedVariables&lt;/code&gt;; delete them one by one.&lt;/p&gt;
      &lt;pre class="brush: csharp"&gt;if (context.ParentContext != null &amp;amp;&amp;amp; context.ParentContext.SharedVariables != null &amp;amp;&amp;amp; context.ParentContext.SharedVariables.Contains(sharedVarName))
      {
      EntityCollection RecordsToDelete = (EntityCollection)context.ParentContext.SharedVariables[sharedVarName];
      tracer.Trace("Found {0} records to delete", RecordsToDelete.Entities.Count);
      foreach (Entity relatingEntity in RecordsToDelete.Entities)
      {
      tracer.Trace("Deleting {0} {1}", relatingEntity.LogicalName, relatingEntity.Id);
      try
      {
      service.Delete(childEntity.LogicalName, childEntity.Id);
      }
      catch (Exception ex)
      {
      tracer.Trace("Delete failed: {0}", ex.Message);
      }
      }
      context.ParentContext.SharedVariables.Remove(sharedVarName);
      }
      &lt;/pre&gt;
      &lt;p&gt;
      As described in the &lt;a href="http://msdn.microsoft.com/en-us/library/gg328579.aspx" target="_blank"&gt;SharedVariables documentation&lt;/a&gt;, objects placed there in stage
      10 must be accessed from the &lt;a href="http://msdn.microsoft.com/en-us/library/microsoft.xrm.sdk.ipluginexecutioncontext.parentcontext.aspx" target="_blank"&gt;ParentContext&lt;/a&gt; in stage 20.&lt;/p&gt;
      &lt;p&gt;
      Note that these cascaded deletes will also trigger the Cascade Delete plugin and
      possibly a new chain of deletes, depending on how the Cascade Delete rules have
      been defined. Deletes being executed as a result of relationships defined with Parental
      behavior will also trigger the plugin. In the example model above, the parental
      relation between account and contact will trigger the role records to be deleted
      from "both directions".&lt;/p&gt;
      &lt;p&gt;
      The unconditional catch at the end of the code block above is just a simple safety
      precaution to handle cases where a child identified to be subject to a cascade delete
      rule has been deleted by other parental relationship behavior when this code segment
      is reached.&lt;/p&gt;
      &lt;h4&gt;
      Download Solution&lt;/h4&gt;
      &lt;p&gt;
      If you like the functionality of this plugin, but don't really feel like implementing
      your own version of it – you can &lt;strong&gt;download&lt;/strong&gt; a complete managed solution
      &lt;a href="http://sdrv.ms/RjD1wN" target="_blank"&gt;HERE&lt;/a&gt;.&lt;/p&gt;
      &lt;p&gt;
      &lt;strong&gt;Disclaimer&lt;/strong&gt;&lt;br&gt;
      &lt;em&gt;It is possible to configure a combination of native parental relationship behavior
      and cascade delete rules in this solution which together may cause a recursive effect
      that can produce sql deadlocks. As all deletes are executed within the original
      delete transaction, this problem will not result in any inconsistent data.&lt;/em&gt;&lt;/p&gt;  &lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/3534158126191039150-3776549820754361006?l=jonasrapp.cinteros.se' alt='' /&gt;&lt;/div&gt;
    </content>
    <link rel='replies' type='application/atom+xml' href='http://jonasrapp.cinteros.se/feeds/3776549820754361006/comments/default' title='Post Comments'/>
    <link rel='replies' type='text/html' href='http://jonasrapp.cinteros.se/2012/10/CascadeDelete2.html#comment-form' title='0 Comments'/>
    <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/3776549820754361006'/>
    <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/3776549820754361006'/>
    <link rel='alternate' type='text/html' href='http://jonasrapp.cinteros.se/2012/10/CascadeDelete2.html' title='CRM 2011: Multiple Cascade Delete – part 2'/>
    <author>
      <name>Jonas Rapp</name>
      <uri>https://plus.google.com/109176631335910576528</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//lh6.googleusercontent.com/-R_XLzSOOvqs/AAAAAAAAAAI/AAAAAAAAAsk/wfsnAqqNsCw/s512-c/photo.jpg'/>
    </author>
    <media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://lh6.ggpht.com/-F_n6ulMRZDc/UHfLgZjFfuI/AAAAAAAAAwE/tvDJ0bAA3Ps/s72-c/AccountContact2_thumb%25255B15%25255D.png?imgmax=800' height='72' width='72'/>
    <thr:total>0</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-3534158126191039150.post-7422041013163902681</id>
    <published>2012-10-04T17:04:00.000+02:00</published>
    <updated>2012-10-22T15:42:25.245+02:00</updated>
    <category scheme='http://www.blogger.com/atom/ns#' term='Customization'/>
    <category scheme='http://www.blogger.com/atom/ns#' term='Plugin'/>
    <category scheme='http://www.blogger.com/atom/ns#' term='Community'/>
    <title type='text'>CRM 2011: Multiple Cascade Delete – part 1</title>
    <content type='html'>&lt;p&gt;As I have &lt;a href="http://jonasrapp.cinteros.se/2012/10/crm-plugins-retrieve-children-during.html"&gt;recently mentioned&lt;/a&gt;, the possibilities of defining cascade deletes in Microsoft Dynamics CRM 2011 are quite limited. Only one parent entity can have the relationship behavior set to &lt;em&gt;Cascade Delete&lt;/em&gt;. When you create a manual intersect entity to connect two or more other entities, this constraint is simply not acceptable for the end users.&lt;/p&gt; &lt;h2&gt;Scenario&lt;/h2&gt; &lt;p&gt;Consider this classic scenario: &lt;/p&gt; &lt;p&gt;Instead of just associating contacts with a parent account, you want to be able to define a more dynamic model.&lt;a href="http://lh3.ggpht.com/-TVDuzoTIxC8/UHLFSI30gOI/AAAAAAAAAuo/hBHUnPl2Dq8/s1600-h/AccountContact%25255B5%25255D.png" target="_blank"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px auto; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="AccountContact" border="0" alt="AccountContact" src="http://lh3.ggpht.com/-LEBr1bHbP3E/UHLFTkOCmaI/AAAAAAAAAuw/PPlAafcFwkQ/AccountContact_thumb%25255B3%25255D.png?imgmax=800" width="240" height="89"&gt;&lt;/a&gt;&lt;em&gt;This could be accomplished using &lt;a href="http://msdn.microsoft.com/en-us/library/gg328381.aspx" target="_blank"&gt;Connections&lt;/a&gt; and &lt;a href="http://msdn.microsoft.com/en-us/library/gg328007.aspx" target="_blank"&gt;Connection Roles&lt;/a&gt;, but that too has a number of pros and cons, which I will not go into in this article.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;When creating the relations to the Role entity, only one of them (i.e. either the relation to Account, Contact &lt;u&gt;or&lt;/u&gt; Function) can be defined with cascade delete. What you would like here is to specify &lt;em&gt;Cascade &lt;/em&gt;for both &lt;strong&gt;Account &lt;/strong&gt;and &lt;strong&gt;Contact&lt;/strong&gt;, and &lt;em&gt;Remove Link &lt;/em&gt;for &lt;strong&gt;Function&lt;/strong&gt;.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;When using a manual intersect entity as in this example, the Role object will loose all meaning if either the associated Contact or the associated Account is deleted, thus the Role should of course be deleted in both cases.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;To solve this, I will create a plugin which can be configured to perform the cascade behavior where it is not possible to do it by customizations only.&lt;/p&gt; &lt;h2&gt;Relationship Behavior&lt;/h2&gt; &lt;p&gt;First a few notes about the different types of &lt;a href="http://msdn.microsoft.com/en-us/library/gg309412.aspx" target="_blank"&gt;relationship behavior&lt;/a&gt; during delete.&lt;/p&gt; &lt;p&gt;The &lt;strong&gt;Restrict &lt;/strong&gt;behavior verifies if there are any existing associating records before &lt;a href="http://msdn.microsoft.com/en-us/library/microsoft.xrm.sdk.ipluginexecutioncontext.stage.aspx" target="_blank"&gt;stage&lt;/a&gt; 20 (Pre Operation). So this behavior cannot be used, as we want to perform our configured plugin delete within the triggering transaction to ensure proper rollback behavior.&lt;/p&gt; &lt;p&gt;The &lt;strong&gt;Cascade &lt;/strong&gt;behavior can only be defined for one relationship, which in this case will be to the Contact entity.&lt;/p&gt; &lt;p&gt;The &lt;strong&gt;Remove Link &lt;/strong&gt;behavior will leave the child records in CRM, which is possible as the relationship attribute will be nulled by CRM between stage 10 and 20. Using this behavior alone would leave Roles defining e.g. that "Jonas has function Consultant at company &lt;em&gt;null&lt;/em&gt;" when deleting accounts.&lt;/p&gt; &lt;h2&gt;Objective and Configuration&lt;/h2&gt; &lt;p&gt;A plugin shall delete children of a parent record that is being deleted.&lt;/p&gt; &lt;p&gt;To specify which relationships that shall invoke this function, I use a configuration entity in CRM.&lt;a href="http://lh3.ggpht.com/-iHC-oGPZbxU/UHUuCrA_mWI/AAAAAAAAAvg/ydG8Q9bejLA/s1600-h/CascadeDeleteDefinition3%25255B4%25255D.png" target="_blank"&gt;&lt;img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px auto; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top: 0px; border-right: 0px; padding-top: 0px" title="CascadeDeleteDefinition3" border="0" alt="CascadeDeleteDefinition3" src="http://lh3.ggpht.com/-EOKS9wjGeAw/UHUuEu6nU_I/AAAAAAAAAvo/K43OPf1FOmQ/CascadeDeleteDefinition3_thumb%25255B2%25255D.png?imgmax=800" width="244" height="170"&gt;&lt;/a&gt;&lt;em&gt; It is also possible to pass the configuration as &lt;a href="http://blogs.msdn.com/b/crm/archive/2008/10/24/storing-configuration-data-for-microsoft-dynamics-crm-plug-ins.aspx" target="_blank"&gt;parameters to the plugin&lt;/a&gt; constructor, but then you have to enter the configuration in the step registrations, which is not very user friendly to the sysadmin.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;The operation shall be performed in stage 20 (Pre Operation) as it will then be within the transaction of the triggering delete, and the children will be deleted before the parent record is actually removed from the database.&lt;/p&gt; &lt;p&gt;As the lookup attributes are nulled before stage 20 of the &lt;a href="http://msdn.microsoft.com/en-us/library/gg327941.aspx" target="_blank"&gt;event execution pipeline&lt;/a&gt;, the plugin will retrieve a list of the children to delete in stage 10. This list is &lt;a href="http://msdn.microsoft.com/en-us/library/gg328579.aspx" target="_blank"&gt;passed to the plugin&lt;/a&gt; triggered in stage 20 within the context's &lt;a href="http://msdn.microsoft.com/en-us/library/microsoft.xrm.sdk.iexecutioncontext.sharedvariables.aspx" target="_blank"&gt;SharedVariables&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;To improve performance, a cache of Cascade Delete configurations is maintained in the plugin class. If a configuration record is created, updated or deleted, the cache will be cleared.&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;em&gt;In the next post I will demonstrate and explain the code in the plugin, and also provide a complete solution for deploying multiple cascade delete in your Microsoft Dynamics CRM. Stay tuned!&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;  &lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/3534158126191039150-7422041013163902681?l=jonasrapp.cinteros.se' alt='' /&gt;&lt;/div&gt;</content>
    <link rel='replies' type='application/atom+xml' href='http://jonasrapp.cinteros.se/feeds/7422041013163902681/comments/default' title='Post Comments'/>
    <link rel='replies' type='text/html' href='http://jonasrapp.cinteros.se/2012/10/CascadeDelete1.html#comment-form' title='0 Comments'/>
    <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/7422041013163902681'/>
    <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/7422041013163902681'/>
    <link rel='alternate' type='text/html' href='http://jonasrapp.cinteros.se/2012/10/CascadeDelete1.html' title='CRM 2011: Multiple Cascade Delete – part 1'/>
    <author>
      <name>Jonas Rapp</name>
      <uri>https://plus.google.com/109176631335910576528</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//lh6.googleusercontent.com/-R_XLzSOOvqs/AAAAAAAAAAI/AAAAAAAAAsk/wfsnAqqNsCw/s512-c/photo.jpg'/>
    </author>
    <media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://lh3.ggpht.com/-LEBr1bHbP3E/UHLFTkOCmaI/AAAAAAAAAuw/PPlAafcFwkQ/s72-c/AccountContact_thumb%25255B3%25255D.png?imgmax=800' height='72' width='72'/>
    <thr:total>0</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-3534158126191039150.post-4994361245756663079</id>
    <published>2012-10-03T13:30:00.001+02:00</published>
    <updated>2012-10-22T15:42:25.244+02:00</updated>
    <category scheme='http://www.blogger.com/atom/ns#' term='Plugin'/>
    <category scheme='http://www.blogger.com/atom/ns#' term='Community'/>
    <title type='text'>CRM Plugins: Retrieve children during Delete</title>
    <content type='html'>&lt;h2&gt;&lt;em&gt;Tip of the day!&lt;/em&gt;&lt;/h2&gt; &lt;p&gt;&lt;em&gt;If you want to write a plugin that needs to read children of a record being deleted – this must be done in the Pre Validation stage.&lt;/em&gt;&lt;/p&gt; &lt;h2&gt;Why is that?&lt;/h2&gt; &lt;p&gt;For 1:N relations with &lt;strong&gt;Delete Behavior: Remove Link&lt;/strong&gt;, the lookup to the parent being deleted is set to null somewhere between stage 10 (Pre Validation) and 20 (Pre Operation), but inside the transaction of the primary record deletion.&lt;/p&gt; &lt;p&gt;&lt;a href="http://lh3.ggpht.com/-ew0yirHJ-28/UGxFKoXAPLI/AAAAAAAAAuM/M7bJIj0JKjE/s1600-h/RemoveLink%25255B8%25255D.png" target="_blank"&gt;&lt;img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px auto; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top: 0px; border-right: 0px; padding-top: 0px" title="RemoveLink" border="0" alt="RemoveLink" src="http://lh4.ggpht.com/-na_K9ndkId4/UGxFMT46H3I/AAAAAAAAAuU/yWOCfNftjxo/RemoveLink_thumb%25255B6%25255D.png?imgmax=800" width="244" height="58"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;So if trying to retrieve the children in any stage after Pre Validation you will not get any results, as they all have a not-yet-committed update transaction where the relation is nulled.&lt;/p&gt; &lt;h2&gt;Why on earth should I care?&lt;/h2&gt; &lt;p&gt;You might agree with me that the constraints regarding cascade behavior on relationships do not quite fulfill the needs that are quite common when creating manual N:N relations.&lt;/p&gt; &lt;p&gt;I will publish some tricks to generically cascade delete from several parents to a manual intersect entity in an article soon to come. Stay tuned!&lt;/p&gt; &lt;p&gt;&lt;em&gt;Unfamiliar with native / manual N:N relations? See Richard Knudson's excellent &lt;/em&gt;&lt;a href="http://www.dynamicscrmtrickbag.com/2011/05/08/many-to-many-relationships-in-dynamics-crm-2011/" target="_blank"&gt;&lt;em&gt;article on this topic&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;  &lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/3534158126191039150-4994361245756663079?l=jonasrapp.cinteros.se' alt='' /&gt;&lt;/div&gt;</content>
    <link rel='replies' type='application/atom+xml' href='http://jonasrapp.cinteros.se/feeds/4994361245756663079/comments/default' title='Post Comments'/>
    <link rel='replies' type='text/html' href='http://jonasrapp.cinteros.se/2012/10/crm-plugins-retrieve-children-during.html#comment-form' title='0 Comments'/>
    <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/4994361245756663079'/>
    <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/4994361245756663079'/>
    <link rel='alternate' type='text/html' href='http://jonasrapp.cinteros.se/2012/10/crm-plugins-retrieve-children-during.html' title='CRM Plugins: Retrieve children during Delete'/>
    <author>
      <name>Jonas Rapp</name>
      <uri>https://plus.google.com/109176631335910576528</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//lh6.googleusercontent.com/-R_XLzSOOvqs/AAAAAAAAAAI/AAAAAAAAAsk/wfsnAqqNsCw/s512-c/photo.jpg'/>
    </author>
    <media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://lh4.ggpht.com/-na_K9ndkId4/UGxFMT46H3I/AAAAAAAAAuU/yWOCfNftjxo/s72-c/RemoveLink_thumb%25255B6%25255D.png?imgmax=800' height='72' width='72'/>
    <thr:total>0</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-3534158126191039150.post-235831088265405878</id>
    <published>2012-09-03T09:40:00.001+02:00</published>
    <updated>2012-10-18T16:23:09.190+02:00</updated>
    <category scheme='http://www.blogger.com/atom/ns#' term='JavaScript'/>
    <category scheme='http://www.blogger.com/atom/ns#' term='Tools'/>
    <category scheme='http://www.blogger.com/atom/ns#' term='Forms'/>
    <title type='text'>CRM 2011 Quick Reference for Form Scripting</title>
    <content type='html'>&lt;p&gt;Big thumbs up to &lt;a href="http://blogs.msdn.com/b/crm/archive/2006/11/17/bio-jim-daly.aspx"&gt;Jim Daly&lt;/a&gt; who composed this &lt;a href="http://msdn.microsoft.com/en-us/library/jj602964.aspx"&gt;Form Scripting Quick Reference&lt;/a&gt; for Microsoft Dynamics CRM 2011.&lt;/p&gt; &lt;p&gt;Very good, short, intuitive examples and really easy to find what you are looking for.&lt;/p&gt; &lt;p&gt;&lt;a title="Form Scripting Quick Reference" href="http://msdn.microsoft.com/en-us/library/jj602964.aspx"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px auto; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="Form Scripting Quick Reference" border="0" alt="Form Scripting Quick Reference" src="http://lh4.ggpht.com/-V2v6nKNpfdc/UERe75FkMrI/AAAAAAAAAt0/AruNVOb2ddQ/FormScriptQR%25255B18%25255D.png?imgmax=800" width="238" height="264"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/jj602964.aspx"&gt;http://msdn.microsoft.com/en-us/library/jj602964.aspx&lt;/a&gt;&lt;/p&gt;  &lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/3534158126191039150-235831088265405878?l=jonasrapp.cinteros.se' alt='' /&gt;&lt;/div&gt;</content>
    <link rel='replies' type='application/atom+xml' href='http://jonasrapp.cinteros.se/feeds/235831088265405878/comments/default' title='Post Comments'/>
    <link rel='replies' type='text/html' href='http://jonasrapp.cinteros.se/2012/09/crm-2011-quick-reference-for-form.html#comment-form' title='0 Comments'/>
    <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/235831088265405878'/>
    <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/235831088265405878'/>
    <link rel='alternate' type='text/html' href='http://jonasrapp.cinteros.se/2012/09/crm-2011-quick-reference-for-form.html' title='CRM 2011 Quick Reference for Form Scripting'/>
    <author>
      <name>Jonas Rapp</name>
      <uri>https://plus.google.com/109176631335910576528</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//lh6.googleusercontent.com/-R_XLzSOOvqs/AAAAAAAAAAI/AAAAAAAAAsk/wfsnAqqNsCw/s512-c/photo.jpg'/>
    </author>
    <media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://lh4.ggpht.com/-V2v6nKNpfdc/UERe75FkMrI/AAAAAAAAAt0/AruNVOb2ddQ/s72-c/FormScriptQR%25255B18%25255D.png?imgmax=800' height='72' width='72'/>
    <thr:total>0</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-3534158126191039150.post-3351494039612406157</id>
    <published>2012-08-20T08:45:00.000+02:00</published>
    <updated>2012-10-22T15:42:25.238+02:00</updated>
    <category scheme='http://www.blogger.com/atom/ns#' term='JavaScript'/>
    <category scheme='http://www.blogger.com/atom/ns#' term='Customization'/>
    <category scheme='http://www.blogger.com/atom/ns#' term='Community'/>
    <title type='text'>Automatically Set Regarding on New Activities</title>
    <content type='html'>
      &lt;h2&gt;Summary&lt;/h2&gt; &lt;p&gt;Missing functionality in the MS CRM 2011 OOB functionality:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Activities created from menu File – New Activity on entity forms do not get the Regarding field populated.  &lt;li&gt;When creating new activities from the associated view on the entity form, the Regarding field is mapped properly.&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;a href="http://lh5.ggpht.com/-16CLw5Isq60/UC4uxHMm4MI/AAAAAAAAAtA/HxRtB97LyI0/s1600-h/FileNewActivity%25255B2%25255D.png" target="_blank"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px auto; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="FileNewActivity" border="0" alt="FileNewActivity" src="http://lh5.ggpht.com/-iqNUT6u6nvQ/UC4ux8tzuQI/AAAAAAAAAtI/_91LPjV_kQ4/FileNewActivity_thumb.png?imgmax=800" width="221" height="244"&gt;&lt;/a&gt;In this post, I will demonstrate a&lt;strong&gt; javascript example of a generic way to populate the Regarding field on activities&lt;/strong&gt;, where the OOB CRM functionality fails to do this.&lt;a href="http://lh3.ggpht.com/-BMYZ-GcuEFg/UC4uyst2ycI/AAAAAAAAAtQ/l9hO2YQOSCU/s1600-h/TaskWORegarding%25255B2%25255D.png" target="_blank"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px auto; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="TaskWORegarding" border="0" alt="TaskWORegarding" src="http://lh3.ggpht.com/-jgK-m0lwhSs/UC4uzV-LUMI/AAAAAAAAAtY/-T-MFXj-bMI/TaskWORegarding_thumb.png?imgmax=800" width="244" height="129"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Objective&lt;/h2&gt; &lt;p&gt;Whenever possible, the activity form shall to try to find which record that should be set as &lt;em&gt;regarding&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;While doing this, also provide an opportunity to specify which entities that shall be allowed as regarding for each type of activity entity.&lt;/p&gt; &lt;h2&gt;Method&lt;/h2&gt; &lt;ol&gt; &lt;li&gt;As the activity form is not opened with any parameters indicating "where it came from", I investigate &lt;code&gt;window.parent.opener&lt;/code&gt; to find information of its origin.  &lt;li&gt;Metadata requests are used to find additional information of the source, to be able to map between &lt;em&gt;ObjectTypeCode&lt;/em&gt; and &lt;em&gt;LogicalName&lt;/em&gt;, as well as to dynamically find which attribute on the source that is the primary attribute (i.e. the "name" attribute").  &lt;li&gt;I perform a &lt;em&gt;REST&lt;/em&gt; request to find the name of the source record, instead of e.g. trying to walk through the source form's DOM to find information about it.&lt;/li&gt;&lt;/ol&gt; &lt;h2&gt;Code samples&lt;/h2&gt;  &lt;a name='more'&gt;&lt;/a&gt;  &lt;p&gt;Function to verify and populate the Regarding field:&lt;/p&gt;&lt;pre class="brush: js"&gt;Cinteros.Xrm.Activity = {
      _verifyRegarding: function (regardingEntities) {
      try {
      // First check if we have a valid mapped regardingobject
      var regardingObjectId = Xrm.Page.getAttribute("regardingobjectid").getValue();
      if (regardingObjectId &amp;amp;&amp;amp; regardingObjectId[0].entityType) {
      // We have a regarding object through mapping, verify it is from an allowed entity
      if (!regardingEntities || !regardingEntities.length) {
      return true;
      }
      for (var i = 0; i &amp;lt; regardingEntities.length; i++) {
      if (regardingObjectId[0].entityType === regardingEntities[i]) {
      return true;
      }
      }
      return false;
      }
      // No regarding object was set - now examine opener to see where we came from
      if (window &amp;amp;&amp;amp; window.parent &amp;amp;&amp;amp; window.parent.opener &amp;amp;&amp;amp; window.parent.opener.location &amp;amp;&amp;amp; window.parent.opener.location.href) {
      var href = window.parent.opener.location.href;
      // Extract parent etc from its href
      var parentEtc = Cinteros.Xrm.SDK.getParameter(href, "etc") || Cinteros.Xrm.SDK.getParameter(href, "oType");
      // Get metadata for parent entitytype
      var regardingEntityMeta;
      var entityMetadataCollection;
      if (!regardingEntities || !regardingEntities.length) {
      // No allowed entities specified, load metadata for all entities
      entityMetadataCollection = Cinteros.Xrm.SDK.RetrieveAllEntities();
      }
      else {
      // Load metadata only for allowed entities
      entityMetadataCollection = [];
      for (var i = 0; i &amp;lt; regardingEntities.length; i++) {
      entityMetadataCollection.push(Cinteros.Xrm.SDK.RetrieveEntity(regardingEntities[i]));
      }
      }
      // Get the metadata for correct parent entity, based on etc/otc
      for (var i = 0; i &amp;lt; entityMetadataCollection.length; i++) {
      if (entityMetadataCollection[i].ObjectTypeCode == parentEtc) {
      regardingEntityMeta = entityMetadataCollection[i];
      break;
      }
      }
      if (regardingEntityMeta &amp;amp;&amp;amp; regardingEntityMeta.ObjectTypeCode == parentEtc) {
      // Extract parent id from its href
      var parentId = Cinteros.Xrm.SDK.getParameter(href, "id") || Cinteros.Xrm.SDK.getParameter(href, "oId");
      if (parentId) {
      parentId = unescape(parentId);
      var attributeMeta = Cinteros.Xrm.SDK.RetrieveAttribute(regardingEntityMeta.LogicalName, regardingEntityMeta.PrimaryNameAttribute);
      // Retrieve the regarding entity, to be able to find its primary name
      var regardingObject = Cinteros.Xrm.REST.Retrieve(regardingEntityMeta.SchemaName, parentId, "?$select=" + attributeMeta.SchemaName);
      if (regardingObject) {
      // Found regarding record, create lookup object
      var regardingLkp = [{ "id": parentId, "entityType": regardingEntityMeta.LogicalName, "name": regardingObject[attributeMeta.SchemaName]}];
      Xrm.Page.getAttribute("regardingobjectid").setValue(regardingLkp);
      return true;
      }
      }
      }
      }
      return false;
      }
      catch (e) {
      window.alert("Error in verifyRegarding:\n\n" + e.description);
      }
      }
      }
      &lt;/pre&gt;
      &lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; The javascript-functions in namespace&lt;/em&gt; &lt;code&gt;Cinteros.Xrm&lt;/code&gt; &lt;em&gt;are part of our internally developed tools, but the names should be quite self-explanatory.&lt;br&gt;&lt;/em&gt;REST &lt;em&gt;functionality can be replaced by similar functionality in the &lt;strong&gt;CrmRestKit&lt;/strong&gt;, see &lt;/em&gt;&lt;a href="http://crmrestkit.codeplex.com/"&gt;&lt;em&gt;http://crmrestkit.codeplex.com/&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, or by other custom made code.&lt;br&gt;&lt;/em&gt;MetaData &lt;em&gt;functionality can be replaced by functionality in the &lt;strong&gt;MS CRM SDK&lt;/strong&gt;, see &lt;/em&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/gg594428.aspx"&gt;&lt;em&gt;Sample: Retrieve Entity Metadata Using JScript&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;br&gt;Feel free to &lt;strong&gt;contact me&lt;/strong&gt; if you have any questions.&lt;/em&gt;&lt;/p&gt;
      &lt;p&gt;Function to register for the formLoad event on each activity entity that shall have this functionality:&lt;/p&gt;&lt;pre class="brush: js"&gt;Cinteros.Xrm.Activity = {
      formLoad: function () {
      try {
      // Only do this when creating new activities
      if (Xrm.Page.ui.getFormType() === 1) {
      // For this example - four entities are allowed to be set as regarding
      var allowedEntities = ["contact", "lead", "opportunity", "jr_my_custom_entity"];
      if (this._verifyRegarding(allowedEntities) === false) {
      window.alert("Activity must be created from a valid regarding record.\n(" + allowedEntities.toString() + ")");
      Xrm.Page.ui.close();
      }
      }
      }
      catch (e) {
      window.alert("Error during formLoad:\n\n" + e.description);
      }
      }
      }&lt;/pre&gt;
      &lt;p&gt;It is possible to call the &lt;code&gt;_verifyRegarding&lt;/code&gt; function without any parameter, thus allowing any entity as regarding object. This will however read all entity metadata from the database, which typically takes a few seconds. So specifying the allowed set of regarding entity types is recommended.&lt;/p&gt;
      &lt;p&gt;Exclude the if-clause when calling the &lt;code&gt;_verifyRegarding&lt;/code&gt; function to ignore it's return value. Then the function will simply populate the regarding field when possible, without any verification that the field must be populated, or that it must be populated by a specific entity type.&lt;/p&gt;
      &lt;p&gt;&lt;em&gt;Note that this solution uses window references and url parameters to interpret the caller. This is &lt;strong&gt;probably &lt;/strong&gt;not supported according to MS CRM SDK, but it is not unsupported either, as it does not alter the DOM or use undocumented javascript methods, and it includes quite good error handling.&lt;/em&gt;&lt;/p&gt;  &lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/3534158126191039150-3351494039612406157?l=jonasrapp.cinteros.se' alt='' /&gt;&lt;/div&gt;
    </content>
    <link rel='replies' type='application/atom+xml' href='http://jonasrapp.cinteros.se/feeds/3351494039612406157/comments/default' title='Post Comments'/>
    <link rel='replies' type='text/html' href='http://jonasrapp.cinteros.se/2012/08/setregarding.html#comment-form' title='1 Comments'/>
    <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/3351494039612406157'/>
    <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/3351494039612406157'/>
    <link rel='alternate' type='text/html' href='http://jonasrapp.cinteros.se/2012/08/setregarding.html' title='Automatically Set Regarding on New Activities'/>
    <author>
      <name>Jonas Rapp</name>
      <uri>https://plus.google.com/109176631335910576528</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//lh6.googleusercontent.com/-R_XLzSOOvqs/AAAAAAAAAAI/AAAAAAAAAsk/wfsnAqqNsCw/s512-c/photo.jpg'/>
    </author>
    <media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://lh5.ggpht.com/-iqNUT6u6nvQ/UC4ux8tzuQI/AAAAAAAAAtI/_91LPjV_kQ4/s72-c/FileNewActivity_thumb.png?imgmax=800' height='72' width='72'/>
    <thr:total>1</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-3534158126191039150.post-4165873211597860725</id>
    <published>2012-08-09T09:22:00.001+02:00</published>
    <updated>2012-10-18T16:23:09.201+02:00</updated>
    <category scheme='http://www.blogger.com/atom/ns#' term='JavaScript'/>
    <category scheme='http://www.blogger.com/atom/ns#' term='Rollup'/>
    <category scheme='http://www.blogger.com/atom/ns#' term='Forms'/>
    <title type='text'>Xrm.Utility methods in MS Dynamics CRM UR8</title>
    <content type='html'>
      &lt;ul&gt; &lt;li&gt;&lt;em&gt;Have you ever used the unsupported javascript-function &lt;code&gt;&lt;strong&gt;openObj&lt;/strong&gt;&lt;/code&gt; to open a form in Microsoft Dynamics CRM 2011?&lt;/em&gt;  &lt;li&gt;&lt;em&gt;Have you ever cursed out loud over getting correct paths and parameters for &lt;strong&gt;URL Addressable Forms&lt;/strong&gt;?&lt;/em&gt;  &lt;li&gt;&lt;em&gt;Have you ever implemented your own functionality to open a Microsoft Dynamics CRM 2011 &lt;strong&gt;webresource&lt;/strong&gt; in a new window?&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Stop that. Now.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;At last, in UR8 Microsoft has included supported javascript-functions for those actions, providing a better user experience as well as nicer code than using the functionality of &lt;a href="http://msdn.microsoft.com/en-us/library/gg328483.aspx" target="_blank"&gt;URL Addressable Forms and Views&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;No new SDK version has been released yet, so you cannot read about it or find any examples there, it was just recently announced in &lt;a href="http://blogs.msdn.com/b/crm/archive/2012/07/18/new-xrm-utility-functions-in-update-rollup-8-for-microsoft-dynamics-crm-2011-and-microsoft-dynamics-crm-online.aspx" target="_blank"&gt;&lt;strong&gt;The Microsoft Dynamics CRM Blog&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;&lt;strong&gt;Basic description&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;There is a javascript library called &lt;code&gt;Xrm.Utility&lt;/code&gt; which is available "everywhere" as long as you have a CRM context.&lt;/p&gt;&lt;pre class="brush: js"&gt;Xrm.Utility.openEntityForm(name, id, parameters)
      Xrm.Utility.openWebResource(webResourceName, webResourceData, width, height)

      &lt;/pre&gt;
      &lt;p&gt;Both functions return the window object that is created which allows you to e.g. move and resize the window.&lt;/p&gt;
      &lt;p&gt;The &lt;code&gt;parameters&lt;/code&gt; parameter can be used to set default values when creating a new record and to specify which form to display.&lt;/p&gt;
      &lt;p&gt;One of the best things though – is that the &lt;code&gt;openEntityForm&lt;/code&gt; function takes the &lt;strong&gt;LogicalName&lt;/strong&gt; of the entity instead of forcing us to make a metadata request to get the &lt;strong&gt;ObjectTypeCode&lt;/strong&gt;…!&lt;/p&gt;
      &lt;h2&gt;&lt;strong&gt;Usage examples&lt;/strong&gt;&lt;/h2&gt;
      &lt;a name='more'&gt;&lt;/a&gt;
      &lt;h5&gt;openEntityForm&lt;/h5&gt;
      &lt;ul&gt;
      &lt;li&gt;Open a record from a custom html or Silverlight displaying CRM data
      &lt;li&gt;Open a new record form from a custom ribbon button populating with default data
      &lt;li&gt;Create a new record in javascript and then opening that new record&lt;/li&gt;&lt;/ul&gt;
      &lt;h5&gt;openWebResource&lt;/h5&gt;
      &lt;ul&gt;
      &lt;li&gt;Open a webresource from a custom ribbon button (e.g. html page with Bing map integration)
      &lt;li&gt;Prompt user for confirmation using your own nicely styled Confirm dialog (instead of ugly styled &lt;code&gt;window.confirm(…)&lt;/code&gt;)&lt;/li&gt;&lt;/ul&gt;
      &lt;p&gt;&lt;em&gt;&lt;font size="1"&gt;Thank's &lt;/font&gt;&lt;/em&gt;&lt;a href="http://markuserlandsson.wordpress.com/" target="_blank"&gt;&lt;em&gt;&lt;font size="1"&gt;Markus&lt;/font&gt;&lt;/em&gt;&lt;/a&gt;&lt;em&gt;&lt;font size="1"&gt; for enlightening me about this news!&lt;/font&gt;&lt;/em&gt;&lt;/p&gt;  &lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/3534158126191039150-4165873211597860725?l=jonasrapp.cinteros.se' alt='' /&gt;&lt;/div&gt;
    </content>
    <link rel='replies' type='application/atom+xml' href='http://jonasrapp.cinteros.se/feeds/4165873211597860725/comments/default' title='Post Comments'/>
    <link rel='replies' type='text/html' href='http://jonasrapp.cinteros.se/2012/08/xrmutility-methods-in-ms-dynamics-crm.html#comment-form' title='0 Comments'/>
    <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/4165873211597860725'/>
    <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/4165873211597860725'/>
    <link rel='alternate' type='text/html' href='http://jonasrapp.cinteros.se/2012/08/xrmutility-methods-in-ms-dynamics-crm.html' title='Xrm.Utility methods in MS Dynamics CRM UR8'/>
    <author>
      <name>Jonas Rapp</name>
      <uri>https://plus.google.com/109176631335910576528</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//lh6.googleusercontent.com/-R_XLzSOOvqs/AAAAAAAAAAI/AAAAAAAAAsk/wfsnAqqNsCw/s512-c/photo.jpg'/>
    </author>
    <thr:total>0</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-3534158126191039150.post-7894974964125106552</id>
    <published>2012-08-08T08:51:00.000+02:00</published>
    <updated>2012-10-22T15:42:25.247+02:00</updated>
    <category scheme='http://www.blogger.com/atom/ns#' term='Customization'/>
    <category scheme='http://www.blogger.com/atom/ns#' term='Ribbon'/>
    <category scheme='http://www.blogger.com/atom/ns#' term='Community'/>
    <title type='text'>Save &amp; Publish Button for Forms and WebResources</title>
    <content type='html'>
      &lt;p&gt;While working with customizations and UI development in CRM 2011 – have you ever been looking for that "Save and Publish" button? Have you ever &lt;strong&gt;not &lt;/strong&gt;been looking for it?&lt;/p&gt; &lt;p&gt;We all wonder why it is not there and there is a &lt;a href="https://connect.microsoft.com/dynamicssuggestions/feedback/details/678566/save-publish-close-while-customizing" target="_blank"&gt;case on Microsoft Connect&lt;/a&gt; requesting it.&lt;br&gt;But relax, it is quite easy to get it in there right now.&lt;/p&gt; &lt;h2&gt;Annoying facts:&lt;/h2&gt; &lt;p&gt;&lt;a href="http://lh6.ggpht.com/-LH8C6QZjlqg/UACDd7iuvGI/AAAAAAAAApw/VYlZkZCNppU/s1600-h/SaveAndPublish32%25255B3%25255D.png" target="_blank"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: right; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="SaveAndPublish32" border="0" alt="SaveAndPublish32" src="http://lh4.ggpht.com/-UpE6Fzjy6J0/UACDepONfDI/AAAAAAAAAp0/xQoAveMhT7Q/SaveAndPublish32_thumb%25255B1%25255D.png?imgmax=800" width="36" height="36"&gt;&lt;/a&gt;It seems to me that someone just forgot to implement this function. There is a button icon &lt;code&gt;/CRMWEB/_imgs/ribbon/SaveAndPublish32.png&lt;/code&gt; (and corresponding 16 pix icon). The javascript function being called when clicking the existing Publish button in form customization is called &lt;code&gt;SaveAndPublish()&lt;/code&gt;. It just does not do what the name indicates.&lt;/p&gt; &lt;h2&gt;Solution:&lt;/h2&gt; &lt;p&gt;To get a Save &amp;amp; Publish button:&lt;/p&gt; &lt;li&gt;Create a javascript webresource that first calls the Save function and then the Publish function  &lt;li&gt;Create the button in the RibbonDiffXml section of customizations.xml, using existing icon files and calling the function created in step 1  &lt;li&gt;Import the ribbon customizations  &lt;p&gt;&lt;a href="http://lh3.ggpht.com/-aZT1I7i7Lpw/UACDfYKRhyI/AAAAAAAAApc/DgE32eynjCI/s1600-h/SnP%25255B2%25255D.png" target="_blank"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px auto; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="SnP" border="0" alt="SnP" src="http://lh3.ggpht.com/-fNPD3apMxOU/UACDgUb5INI/AAAAAAAAApk/UTZm7YhMPNo/SnP_thumb.png?imgmax=800" width="244" height="160"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5&gt;Javascript:&lt;/h5&gt; &lt;p&gt;&lt;pre class="brush: js"&gt;Cinteros.Xrm.Customization = {
      SaveAndPublishForm: function () {
      try {
      SaveForm(false);
      }
      catch (e) { }
      try {
      SaveAndPublish();
      }
      catch (e) { }
      },
      SaveAndPublishWebResource: function () {
      try {
      SaveForm(false);
      }
      catch (e) { }
      try {
      PublishWebResource();
      }
      catch (e) { }
      }
      }&lt;/pre&gt;
      &lt;h5&gt;RibbonDiffXml:&lt;/h5&gt;
      &lt;p&gt;&lt;pre class="brush: html"&gt;  &amp;lt;RibbonDiffXml&amp;gt;
      &amp;lt;CustomActions&amp;gt;
      &amp;lt;CustomAction Id="Cint.Mscrm.FormEditorTab.SaveButtons.Controls" Location="Mscrm.FormEditorTab.SaveButtons.Controls._children" Sequence="1"&amp;gt;
      &amp;lt;CommandUIDefinition&amp;gt;
      &amp;lt;Button Command="Cint.Mscrm.FormEditorTab.SaveButtons.Controls.Button.SaveAndPublish" CommandType="General" Id="Cint.Mscrm.FormEditorTab.SaveButtons.Controls.Button.SaveAndPublish.Id" Image16by16="/_imgs/ribbon/SaveAndPublish16.png" Image32by32="/_imgs/ribbon/SaveAndPublish32.png" TemplateAlias="o1" LabelText="$LocLabels:Cint.Mscrm.FormEditorTab.SaveAndPublish.LabelText" ToolTipTitle="$LocLabels:Cint.Mscrm.FormEditorTab.SaveAndPublish.ToolTip" ToolTipDescription="$LocLabels:Cint.Mscrm.FormEditorTab.SaveAndPublish.ToolTipDescription" /&amp;gt;
      &amp;lt;/CommandUIDefinition&amp;gt;
      &amp;lt;/CustomAction&amp;gt;
      &amp;lt;CustomAction Id="Cint.Mscrm.WebResourceEditTab.Save.Controls" Location="Mscrm.WebResourceEditTab.Save.Controls._children" Sequence="1"&amp;gt;
      &amp;lt;CommandUIDefinition&amp;gt;
      &amp;lt;Button Command="Cint.Mscrm.WebResourceEditTab.Save.Controls.Button.SaveAndPublish" CommandType="General" Id="Cint.Mscrm.WebResourceEditTab.Save.Controls.Button.SaveAndPublish.Id" Image16by16="/_imgs/ribbon/SaveAndPublish16.png" Image32by32="/_imgs/ribbon/SaveAndPublish32.png" TemplateAlias="o1" LabelText="$LocLabels:Cint.Mscrm.FormEditorTab.SaveAndPublish.LabelText" ToolTipTitle="$LocLabels:Cint.Mscrm.FormEditorTab.SaveAndPublish.ToolTip" ToolTipDescription="$LocLabels:Cint.Mscrm.FormEditorTab.SaveAndPublish.ToolTipDescription" /&amp;gt;
      &amp;lt;/CommandUIDefinition&amp;gt;
      &amp;lt;/CustomAction&amp;gt;
      &amp;lt;/CustomActions&amp;gt;
      &amp;lt;Templates&amp;gt;
      &amp;lt;RibbonTemplates Id="Mscrm.Templates"&amp;gt;&amp;lt;/RibbonTemplates&amp;gt;
      &amp;lt;/Templates&amp;gt;
      &amp;lt;CommandDefinitions&amp;gt;
      &amp;lt;CommandDefinition Id="Cint.Mscrm.FormEditorTab.SaveButtons.Controls.Button.SaveAndPublish"&amp;gt;
      &amp;lt;EnableRules&amp;gt;
      &amp;lt;EnableRule Id="Mscrm.Enable.IsCustomizableManagedPropertyRule" /&amp;gt;
      &amp;lt;/EnableRules&amp;gt;
      &amp;lt;DisplayRules /&amp;gt;
      &amp;lt;Actions&amp;gt;
      &amp;lt;JavaScriptFunction FunctionName="Cinteros.Xrm.Customization.SaveAndPublish" Library="$webresource:cint_/scripts/utils_support.js" /&amp;gt;
      &amp;lt;/Actions&amp;gt;
      &amp;lt;/CommandDefinition&amp;gt;
      &amp;lt;CommandDefinition Id="Cint.Mscrm.WebResourceEditTab.Save.Controls.Button.SaveAndPublish"&amp;gt;
      &amp;lt;EnableRules&amp;gt;
      &amp;lt;EnableRule Id="Mscrm.Enable.IsWebResourceCustomizableRule" /&amp;gt;
      &amp;lt;/EnableRules&amp;gt;
      &amp;lt;DisplayRules /&amp;gt;
      &amp;lt;Actions&amp;gt;
      &amp;lt;JavaScriptFunction FunctionName="Cinteros.Xrm.Customization.SaveAndPublishWebResource" Library="$webresource:cint_/scripts/utils_support.js" /&amp;gt;
      &amp;lt;/Actions&amp;gt;
      &amp;lt;/CommandDefinition&amp;gt;
      &amp;lt;/CommandDefinitions&amp;gt;
      &amp;lt;RuleDefinitions&amp;gt;
      &amp;lt;TabDisplayRules /&amp;gt;
      &amp;lt;DisplayRules /&amp;gt;
      &amp;lt;EnableRules /&amp;gt;
      &amp;lt;/RuleDefinitions&amp;gt;
      &amp;lt;LocLabels&amp;gt;
      &amp;lt;LocLabel Id="Cint.Mscrm.FormEditorTab.SaveAndPublish.LabelText"&amp;gt;
      &amp;lt;Titles&amp;gt;
      &amp;lt;Title languagecode="1033" description="Save and Publish" /&amp;gt;
      &amp;lt;Title languagecode="1053" description="Spara och Publicera" /&amp;gt;
      &amp;lt;/Titles&amp;gt;
      &amp;lt;/LocLabel&amp;gt;
      &amp;lt;LocLabel Id="Cint.Mscrm.FormEditorTab.SaveAndPublish.ToolTip"&amp;gt;
      &amp;lt;Titles&amp;gt;
      &amp;lt;Title languagecode="1033" description="Save and Publish" /&amp;gt;
      &amp;lt;Title languagecode="1053" description="Spara och Publicera" /&amp;gt;
      &amp;lt;/Titles&amp;gt;
      &amp;lt;/LocLabel&amp;gt;
      &amp;lt;LocLabel Id="Cint.Mscrm.FormEditorTab.SaveAndPublish.ToolTipDescription"&amp;gt;
      &amp;lt;Titles&amp;gt;
      &amp;lt;Title languagecode="1033" description="Saves and publishes the form" /&amp;gt;
      &amp;lt;Title languagecode="1053" description="Sparar och publicerar formuläret" /&amp;gt;
      &amp;lt;/Titles&amp;gt;
      &amp;lt;/LocLabel&amp;gt;
      &amp;lt;/LocLabels&amp;gt;
      &amp;lt;/RibbonDiffXml&amp;gt;
      &lt;/pre&gt;
      &lt;h2&gt;Shortcut:&lt;/h2&gt;
      &lt;p&gt;If you don't want to do this manually, you can &lt;strong&gt;download&lt;/strong&gt; a solution with just this content &lt;a href="http://sdrv.ms/PI9h7N" target="_blank"&gt;HERE&lt;/a&gt;.&lt;/p&gt;
      &lt;/li&gt;  &lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/3534158126191039150-7894974964125106552?l=jonasrapp.cinteros.se' alt='' /&gt;&lt;/div&gt;
    </content>
    <link rel='replies' type='application/atom+xml' href='http://jonasrapp.cinteros.se/feeds/7894974964125106552/comments/default' title='Post Comments'/>
    <link rel='replies' type='text/html' href='http://jonasrapp.cinteros.se/2012/08/save-publish-button-for-forms-and.html#comment-form' title='0 Comments'/>
    <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/7894974964125106552'/>
    <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/7894974964125106552'/>
    <link rel='alternate' type='text/html' href='http://jonasrapp.cinteros.se/2012/08/save-publish-button-for-forms-and.html' title='Save &amp;amp; Publish Button for Forms and WebResources'/>
    <author>
      <name>Jonas Rapp</name>
      <uri>https://plus.google.com/109176631335910576528</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//lh6.googleusercontent.com/-R_XLzSOOvqs/AAAAAAAAAAI/AAAAAAAAAsk/wfsnAqqNsCw/s512-c/photo.jpg'/>
    </author>
    <media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://lh4.ggpht.com/-UpE6Fzjy6J0/UACDepONfDI/AAAAAAAAAp0/xQoAveMhT7Q/s72-c/SaveAndPublish32_thumb%25255B1%25255D.png?imgmax=800' height='72' width='72'/>
    <thr:total>0</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-3534158126191039150.post-3477207321038306239</id>
    <published>2012-07-25T09:19:00.000+02:00</published>
    <updated>2012-10-22T15:42:25.240+02:00</updated>
    <category scheme='http://www.blogger.com/atom/ns#' term='JavaScript'/>
    <category scheme='http://www.blogger.com/atom/ns#' term='Plugin'/>
    <category scheme='http://www.blogger.com/atom/ns#' term='Community'/>
    <title type='text'>Execute Server-Side Code from Javascript</title>
    <content type='html'>
      &lt;h2&gt;Background:&lt;/h2&gt; &lt;p&gt;General business rules shall be implemented in server-side code to ensure its execution regardless of the origin of data changes; CRM UI, workflow, integration or any other application consuming the CRM web services.&lt;/p&gt; &lt;p&gt;But on some occasions it would be handy to be able to execute this code from JavaScript to improve the user's experience of the application.&lt;/p&gt; &lt;h2&gt;Scenario:&lt;/h2&gt; &lt;p&gt;When creating or updating an Account, there is a plugin registered Pre Validation Create/Update to verify that the given VAT number is in a correct format. If not, the plugin throws an exception instructing the user to enter a correct VAT number.&lt;/p&gt; &lt;div&gt;&lt;a href="http://lh4.ggpht.com/-RmJrJhVqaV0/T_qUeayEQ-I/AAAAAAAAAks/TMbH71_yoaE/s1600-h/VATincorrect%25255B20%25255D.png" target="_blank"&gt;&lt;img style="border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: block; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto; padding-top: 0px" title="VATincorrect" border="0" alt="VATincorrect" src="http://lh4.ggpht.com/-tVG7uvmE4ks/T_qUfWKkPkI/AAAAAAAAAk0/0WeVObjiLeA/VATincorrect_thumb%25255B18%25255D.png?imgmax=800" width="244" height="154"&gt;&lt;/a&gt;&lt;/div&gt; &lt;p&gt;Another plugin is registered Pre Operation Create/Update to look up city/state/county from given zip-code to ensure correct data for the account. This function consumes an external service from a third party accessible as a web service.&lt;/p&gt; &lt;div&gt;&lt;a href="http://lh3.ggpht.com/-yhP5pOaso2A/T_qUgDnoa1I/AAAAAAAAAk4/8O24Z5Hsf7M/s1600-h/Account%252520Cinteros%252520zip%25255B2%25255D.png" target="_blank"&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto; padding-top: 0px" title="Account Cinteros zip" border="0" alt="Account Cinteros zip" src="http://lh3.ggpht.com/-eVPi4JEsQw4/T_qUhB5wJtI/AAAAAAAAAlE/EoawAf0qYcY/Account%252520Cinteros%252520zip_thumb.png?imgmax=800" width="244" height="98"&gt;&lt;/a&gt;&lt;/div&gt; &lt;h2&gt;Challenge&lt;/h2&gt; &lt;p&gt;To improve user experience, the customer requires &lt;strong&gt;immediate&lt;/strong&gt; verification of the VAT no and lookup of geographic information for the zip-code.&lt;/p&gt;  &lt;a name='more'&gt;&lt;/a&gt; &lt;h2&gt;Solution 1 (bad):&lt;/h2&gt; &lt;p&gt;Required functionality can of course be implemented entirely in JavaScript. Rules for VAT numbers and calls to external web services can be coded in client side code. Calling external services may be a problem, depending on firewall configuration, local browser settings etc. but usually it is possible to find a way around these problems.&lt;/p&gt; &lt;p&gt;Composing and parsing SOAP-messages in javascript is neither intuitive nor fun, but of course it can be done.&lt;/p&gt; &lt;p&gt;This solution however would duplicate the same code in two entirely different environments and languages. Duplicated code is, and I think everyone agrees to this, &lt;strong&gt;NOT&lt;/strong&gt; something we want. Right?!&lt;/p&gt; &lt;p&gt;Especially not from a maintenance perspective.&lt;/p&gt; &lt;h2&gt;Solution 2 (good:)&lt;/h2&gt; &lt;p&gt;Create a &lt;strong&gt;custom entity&lt;/strong&gt; &lt;code&gt;jr_serverfunction&lt;/code&gt; with one text field &lt;code&gt;jr_parameter&lt;/code&gt; and one text field &lt;code&gt;jr_result&lt;/code&gt;.&lt;/p&gt; &lt;div&gt;&lt;a href="http://lh6.ggpht.com/-p4n-Z5OoYZI/T_qhb5SoLNI/AAAAAAAAAlQ/tsx2wYJDWDM/s1600-h/ServerFunction%252520blank%25255B2%25255D.png" target="_blank"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px auto; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="ServerFunction blank" border="0" alt="ServerFunction blank" src="http://lh3.ggpht.com/-UVITjXx2FQ4/T_qhcwgNJFI/AAAAAAAAAlY/RFo_QNMBaaU/ServerFunction%252520blank_thumb.png?imgmax=800" width="244" height="148"&gt;&lt;/a&gt;&lt;/div&gt; &lt;h3&gt;Server-side&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Extract logic from the two plugins mentioned to methods in an &lt;strong&gt;isolated C# class&lt;/strong&gt;  &lt;li&gt;Rewrite the plugins to consume this class (to preserve existing functionality invoked on create/update)  &lt;li&gt;Create a plugin triggering &lt;strong&gt;Post Operation RetrieveMultiple&lt;/strong&gt; on &lt;code&gt;jr_serverfunction&lt;/code&gt;. This plugin shall investigate the incoming query to extract it's condition for field &lt;code&gt;jr_parameter&lt;/code&gt; and use this condition to execute desired server-side code  &lt;li&gt;When the result of the function is determined, an instance of entity &lt;code&gt;jr_serverfunction&lt;/code&gt; is created (in code, not saved to the database), resulting data/information placed in field &lt;code&gt;jr_result&lt;/code&gt;, and the entity placed in the &lt;code&gt;EntityCollection&lt;/code&gt; that is to be returned in the query response &lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;a href="http://lh5.ggpht.com/-XqUVEPgPjVU/T_tLz3Z--RI/AAAAAAAAAmw/4g2l8pGjr08/s1600-h/ServerFunction%252520registration%25255B2%25255D.png" target="_blank"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px auto; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="ServerFunction registration" border="0" alt="ServerFunction registration" src="http://lh3.ggpht.com/-z-LONuhklWA/T_tL07tUk-I/AAAAAAAAAm4/AthBrrbU4AE/ServerFunction%252520registration_thumb.png?imgmax=800" width="244" height="202"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Note that the custom entity will actually &lt;strong&gt;never hold any records&lt;/strong&gt; in the CRM database. This is why I also trigger the Create message and immediately throw an error.&lt;/p&gt; &lt;p&gt;&lt;a href="http://lh4.ggpht.com/-TyzIApdtQIU/T_tL1h-SL6I/AAAAAAAAAnQ/eZdmON4KLtk/s1600-h/ServerFunction%252520assembly%25255B3%25255D.png" target="_blank"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px auto; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="ServerFunction assembly" border="0" alt="ServerFunction assembly" src="http://lh4.ggpht.com/-yrBoR6ESqno/T_tL2Fp077I/AAAAAAAAAnU/Jlx69RfRpjQ/ServerFunction%252520assembly_thumb%25255B1%25255D.png?imgmax=800" width="644" height="92"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Plugin code:&lt;/p&gt;&lt;pre class="brush: csharp"&gt;public class ServerSideExecution : IPlugin
      {
      public void Execute(IServiceProvider serviceProvider)
      {
      IPluginExecutionContext context = (IPluginExecutionContext)serviceProvider.GetService(typeof(IPluginExecutionContext));
      if (context.MessageName == "Create")
      throw new InvalidPluginExecutionException("Server Function entity cannot be instantiated");

      if (context.MessageName == "RetrieveMultiple" &amp;amp;&amp;amp;
      context.Stage == 40 &amp;amp;&amp;amp;      // Post Operation
      context.PrimaryEntityName == "jr_serverfunction" &amp;amp;&amp;amp;
      context.InputParameters.Contains("Query") &amp;amp;&amp;amp;
      context.InputParameters["Query"] is QueryExpression)
      {
      ITracingService tracer = (ITracingService)serviceProvider.GetService(typeof(ITracingService));
      tracer.Trace("Initialize service etc");
      IOrganizationServiceFactory serviceFactory = (IOrganizationServiceFactory)serviceProvider.GetService(typeof(IOrganizationServiceFactory));
      IOrganizationService service = serviceFactory.CreateOrganizationService(context.UserId);
      QueryExpression query = (QueryExpression)context.InputParameters["Query"];
      tracer.Trace("Extract condition from query");
      ConditionExpression parameterCondition = MyFunctions.GetFilterConditionByAttribute(query.Criteria, "jr_parameter");
      if (parameterCondition != null &amp;amp;&amp;amp; parameterCondition.Values.Count == 1)
      {
      string parameter = parameterCondition.Values[0].ToString().Trim('%');
      tracer.Trace("Parameter is: {0}", parameter);
      string command = parameter.Split(';')[0];
      string result = null;
      switch (command)
      {
      case "VerifyVAT":
      tracer.Trace("Check if VAT number is correct");
      string vat = parameter.Split(';')[1];
      if (MyFunctions.VerifyVAT(vat))
      result = "ok";
      else
      result = "not ok";
      break;
      case "LookupZIP":
      tracer.Trace("Lookup city etc from ZIP code");
      string zip = parameter.Split(';')[1];
      // Returns a semi-colon separated string with city;state;country
      result = MyFunctions.GetZipInfo(zip);
      break;
      // **************************************
      // ** Add more functions here as needed
      // **************************************
      }
      if (result != null)
      {
      tracer.Trace("Create resulting serverfunction entity with result: {0}", result);
      Entity serverfunction = new Entity("jr_serverfunction");
      Guid id = new Guid();
      serverfunction.Id = id;
      serverfunction.Attributes.Add("jr_serverfunctionid", id);
      serverfunction.Attributes.Add("jr_parameter", parameter);
      serverfunction.Attributes.Add("jr_result", result);
      tracer.Trace("Replace contents of resulting entitycollection");
      EntityCollection resultCollection = (EntityCollection)context.OutputParameters["BusinessEntityCollection"];
      resultCollection.Entities.Clear();
      resultCollection.Entities.Add(serverfunction);
      context.OutputParameters["BusinessEntityCollection"] = resultCollection;
      }
      }
      }
      }
      }&lt;/pre&gt;
      &lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; The function &lt;code&gt;MyFunctions.GetFilterConditionByAttribute&lt;/code&gt; is part of internally developed tools. Please contact me if you are interested in how we find specific conditions in a query.&lt;/em&gt; &lt;/p&gt;
      &lt;p&gt;The plugin can easily be tested by making an Advanced Find query on the Server Function entity in the CRM.&lt;/p&gt;
      &lt;p&gt;&lt;a href="http://lh4.ggpht.com/-tO6D-A46v-E/T_tQmCQwuqI/AAAAAAAAAos/FP8BAZ0I5JM/s1600-h/TestVAT%25255B3%25255D.png" target="_blank"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px auto; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="TestVAT" border="0" alt="TestVAT" src="http://lh5.ggpht.com/-cl3oLOn003s/T_tQm28agXI/AAAAAAAAAow/YXAjbH_kh-w/TestVAT_thumb%25255B1%25255D.png?imgmax=800" width="644" height="202"&gt;&lt;/a&gt; &lt;a href="http://lh5.ggpht.com/-d7d7P6Xc0AU/T_tQnly72FI/AAAAAAAAAo4/qlUQjM1cFiM/s1600-h/TestZIP%25255B3%25255D.png" target="_blank"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px auto; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="TestZIP" border="0" alt="TestZIP" src="http://lh5.ggpht.com/-hx4bG1wf9BA/T_tQoibbFDI/AAAAAAAAApE/e0vpal-xBzo/TestZIP_thumb%25255B1%25255D.png?imgmax=800" width="644" height="202"&gt;&lt;/a&gt; &lt;/p&gt;
      &lt;h3&gt;Client-side&lt;/h3&gt;
      &lt;p&gt;In the client-side JavaScript a method is registered for the &lt;code&gt;onChange&lt;/code&gt; event of the VAT no field. The function will use the REST endpoint to query CRM for records of &lt;code&gt;jr_serverfunction&lt;/code&gt; where &lt;code&gt;jr_parameter&lt;/code&gt; equals "VerifyVAT;1234567890" (where the numbers should be the number entered on the form). &lt;/p&gt;
      &lt;p&gt;The result will contain one record, and the &lt;code&gt;jr_result&lt;/code&gt; field will contain "ok" or "not ok", which the JavaScript can use to immediately instruct the user to correct the number. &lt;/p&gt;&lt;pre class="brush: js"&gt;Cinteros.Xrm.AccountServerFunction = {
      jr_vat_onChange: function () {
      try {
      var vatNo = Xrm.Page.getAttribute("jr_vat").getValue();
      if (vatNo != null) {
      var parameter = "VerifyVAT;" + vatNo;
      var result = this.ExecuteServerFunction(parameter);
      if (result === "not ok") {
      window.alert("VAT number is not in a correct format");
      }
      }
      }
      catch (e) {
      alert("Error in jr_vat_onChange:\n\n" + e.description);
      }
      },

      ExecuteServerFunction: function (parameter) {
      var result = null;
      var serverFunctionResult = Cinteros.Xrm.REST.RetrieveMultiple("jr_serverfunction",
      "?$select=jr_result" +
      "&amp;amp;$filter=jr_parameter eq '" + parameter + "'");

      if (serverFunctionResult &amp;amp;&amp;amp; serverFunctionResult.length === 1) {
      result = serverFunctionResult[0].jr_result;
      }
      return result;
      }
      }&lt;/pre&gt;
      &lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; The javascript-function &lt;code&gt;Cinteros.Xrm.REST.RetrieveMultiple&lt;/code&gt; is part of our internally developed tools, it may well be replaced by similar functionality in the &lt;strong&gt;CrmRestKit&lt;/strong&gt; (&lt;a href="http://crmrestkit.codeplex.com/"&gt;http://crmrestkit.codeplex.com/&lt;/a&gt;) or by other custom made code.&lt;/em&gt; &lt;/p&gt;
      &lt;p&gt;Registering this function as the onchange event of the &lt;em&gt;VAT number&lt;/em&gt; field immediately executes the server-side functionality for validating a VAT number when the user changes the field in the CRM client. &lt;/p&gt;
      &lt;div&gt;&lt;a href="http://lh6.ggpht.com/-i_LMx9FbJsE/T_tKjDXSHbI/AAAAAAAAAnY/xvdjxARxYA0/s1600-h/VATeventhandler%25255B1%25255D.png" target="_blank"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px auto; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="VATeventhandler" border="0" alt="VATeventhandler" src="http://lh5.ggpht.com/-6Yyr9Z_LWxw/T_tKj4WuITI/AAAAAAAAAnc/WG1sfnd-ebA/VATeventhandler_thumb%25255B1%25255D.png?imgmax=800" width="644" height="166"&gt;&lt;/a&gt; &lt;a href="http://lh4.ggpht.com/-00w-21t3moo/T_tKkTIjuoI/AAAAAAAAAmg/i9MygB0ov_c/s1600-h/VATincorrectJS2.png" target="_blank"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px auto; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="VATincorrectJS" border="0" alt="VATincorrectJS" src="http://lh4.ggpht.com/-Hz1IqPZPqgs/T_tKlC-E1wI/AAAAAAAAAmk/DT6TJW9CBaI/VATincorrectJS_thumb.png?imgmax=800" width="244" height="172"&gt;&lt;/a&gt; &lt;/div&gt;
      &lt;p&gt;Corresponding &lt;code&gt;onChange&lt;/code&gt; event for the zip-code field can be implemented to get geographic information and automatically populate city/state etc. on the form. &lt;/p&gt;&lt;pre class="brush: js"&gt;address1_postalcode_onChange: function () {
      try {
      var zipCode = Xrm.Page.getAttribute("address1_postalcode").getValue();
      if (zipCode != null) {
      var parameter = "LookupZIP;" + zipCode;
      var result = this.ExecuteServerFunction(parameter);
      if (result) {
      var city = result.split(';')[0];
      var state = result.split(';')[1];
      var country = result.split(';')[2];
      Xrm.Page.getAttribute("address1_city").setValue(city);
      Xrm.Page.getAttribute("address1_stateorprovince").setValue(state);
      Xrm.Page.getAttribute("address1_country").setValue(country);
      }
      }
      }
      catch (e) {
      alert("Error in address1_postalcode_onChange:\n\n" + e.description);
      }
      }
      &lt;/pre&gt;  &lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/3534158126191039150-3477207321038306239?l=jonasrapp.cinteros.se' alt='' /&gt;&lt;/div&gt;
    </content>
    <link rel='replies' type='application/atom+xml' href='http://jonasrapp.cinteros.se/feeds/3477207321038306239/comments/default' title='Post Comments'/>
    <link rel='replies' type='text/html' href='http://jonasrapp.cinteros.se/2012/07/execute-server-side-code-from-javascript.html#comment-form' title='0 Comments'/>
    <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/3477207321038306239'/>
    <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/3477207321038306239'/>
    <link rel='alternate' type='text/html' href='http://jonasrapp.cinteros.se/2012/07/execute-server-side-code-from-javascript.html' title='Execute Server-Side Code from Javascript'/>
    <author>
      <name>Jonas Rapp</name>
      <uri>https://plus.google.com/109176631335910576528</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//lh6.googleusercontent.com/-R_XLzSOOvqs/AAAAAAAAAAI/AAAAAAAAAsk/wfsnAqqNsCw/s512-c/photo.jpg'/>
    </author>
    <media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://lh4.ggpht.com/-tVG7uvmE4ks/T_qUfWKkPkI/AAAAAAAAAk0/0WeVObjiLeA/s72-c/VATincorrect_thumb%25255B18%25255D.png?imgmax=800' height='72' width='72'/>
    <thr:total>0</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-3534158126191039150.post-1897077908610568276</id>
    <published>2012-07-11T07:39:00.000+02:00</published>
    <updated>2012-10-22T15:42:25.236+02:00</updated>
    <category scheme='http://www.blogger.com/atom/ns#' term='Plugin'/>
    <category scheme='http://www.blogger.com/atom/ns#' term='Community'/>
    <title type='text'>Adding Duplicates in N:N-Relations</title>
    <content type='html'>
      The possibility to use many-to-many relations in Microsoft Dynamics CRM 2011 is very handy for various scenarios.&lt;br&gt; &lt;div&gt;However, it's implementation is not very forgiving when you try to add a relation which already exists.&lt;/div&gt; &lt;div style="text-align: center; clear: both" class="separator"&gt;&lt;a style="margin-left: 1em; margin-right: 1em" href="http://2.bp.blogspot.com/-fdAordYpK6E/T-r1yPdGB9I/AAAAAAAAAkI/uIQ3oOVr9DQ/s1600/duplicate.png" imageanchor="1"&gt;&lt;img border="0" src="http://2.bp.blogspot.com/-fdAordYpK6E/T-r1yPdGB9I/AAAAAAAAAkI/uIQ3oOVr9DQ/s320/duplicate.png" width="320" height="181"&gt;&lt;/a&gt;&lt;/div&gt; &lt;div&gt;&amp;nbsp;&lt;/div&gt; &lt;div&gt;There is no way to configure the relationship or functionality of the "Add existing..." ribbon button to prevent this "ugly" message - so I decided to create a plugin which smooths things out, so that adding a relation which already exists only makes sure the relationship is there, but does not complain if it already was.&lt;/div&gt; &lt;div&gt;&amp;nbsp;&lt;/div&gt; &lt;div&gt;&lt;b&gt;Scenario&lt;/b&gt;&lt;/div&gt; &lt;div&gt;We have a N:N-relation between Account and Product, to indicate which products are interesting to which accounts.&lt;/div&gt; &lt;div style="text-align: center; clear: both" class="separator"&gt;&lt;a style="margin-left: 1em; margin-right: 1em" href="http://3.bp.blogspot.com/-2gw4hPYmxrI/T-r3RuvtX8I/AAAAAAAAAkQ/JXT1U6xdL4Y/s1600/NN-association.png" imageanchor="1"&gt;&lt;img border="0" src="http://3.bp.blogspot.com/-2gw4hPYmxrI/T-r3RuvtX8I/AAAAAAAAAkQ/JXT1U6xdL4Y/s320/NN-association.png" width="320" height="200"&gt;&lt;/a&gt;&lt;/div&gt; &lt;div&gt;&amp;nbsp;&lt;/div&gt; &lt;div&gt;Clicking the Add Existing Product button brings up the lookup dialog for products.&lt;/div&gt; &lt;div&gt;When I now want to add a number of products, I do not want to have recall or check which products were already added. I just want to select all products (we can really sell anything to this company ;) click OK and be done with it.&lt;/div&gt; &lt;div style="text-align: center; clear: both" class="separator"&gt;&lt;a style="margin-left: 1em; margin-right: 1em" href="http://3.bp.blogspot.com/-2EXS2dUfnXs/T-r5_MTO9BI/AAAAAAAAAkc/mkCdE0wtVYg/s1600/NN-addexisting.png" imageanchor="1"&gt;&lt;img border="0" src="http://3.bp.blogspot.com/-2EXS2dUfnXs/T-r5_MTO9BI/AAAAAAAAAkc/mkCdE0wtVYg/s320/NN-addexisting.png" width="320" height="232"&gt;&lt;/a&gt;&lt;/div&gt; &lt;div&gt;&amp;nbsp;&lt;/div&gt; &lt;div&gt;&lt;b&gt;Solution&lt;/b&gt;&lt;/div&gt; &lt;div&gt;We can create a plugin before main operation that verifies if the added relation already exists. But if it exists, we cannot prevent the relation from being created in any other way than throwing an exception, which will then result in a similar "ugly" message to the user, except it will contain the text we throw.&lt;/div&gt; &lt;a name='more'&gt;&lt;/a&gt; &lt;div&gt;So we have to get around the implementation in the main operation (CRM core) some other way.&lt;/div&gt; &lt;div&gt;My choice was to simply delete the existing relation, so adding the new one will not be a problem.&lt;/div&gt; &lt;div&gt;Naturally, this causes extra transactions, but in normal circumstances this will not have any greater impact.&lt;/div&gt; &lt;div&gt;&amp;nbsp;&lt;/div&gt; &lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;pre class="brush: csharp"&gt;using System;
      using System.ServiceModel;
      using Microsoft.Xrm.Sdk;
      using Microsoft.Xrm.Sdk.Messages;
      using Microsoft.Xrm.Sdk.Metadata;
      using Microsoft.Xrm.Sdk.Query;

      namespace Cinteros.Xrm
      {
      public class AssociateAllower : IPlugin
      {
      public void Execute(IServiceProvider serviceProvider)
      {
      IPluginExecutionContext context = (IPluginExecutionContext)serviceProvider.GetService(typeof(IPluginExecutionContext));

      if (context.MessageName == "Associate" &amp;amp;&amp;amp;
      context.Stage == 20 &amp;amp;&amp;amp;      // Before, inside transaction
      context.Mode == 0 &amp;amp;&amp;amp;        // Synchronous
      context.InputParameters.Contains("Target") &amp;amp;&amp;amp;
      context.InputParameters["Target"] is EntityReference &amp;amp;&amp;amp;
      context.InputParameters.Contains("Relationship") &amp;amp;&amp;amp;
      context.InputParameters["Relationship"] is Relationship &amp;amp;&amp;amp;
      context.InputParameters.Contains("RelatedEntities") &amp;amp;&amp;amp;
      context.InputParameters["RelatedEntities"] is EntityReferenceCollection)
      {
      try
      {
      ITracingService tracer = (ITracingService)serviceProvider.GetService(typeof(ITracingService));
      IOrganizationServiceFactory serviceFactory = (IOrganizationServiceFactory)serviceProvider.GetService(typeof(IOrganizationServiceFactory));
      IOrganizationService service = serviceFactory.CreateOrganizationService(context.UserId);

      Trace(tracer, "Get the name of the intersect table and related entities from the context");
      Relationship relationship = ((Relationship)context.InputParameters["Relationship"]);
      Trace(tracer, "Intersect: {0}", relationship);
      EntityReference entity1ref = (EntityReference)context.InputParameters["Target"];
      Trace(tracer, "Entity1: {0} {1}", entity1ref.LogicalName, entity1ref.Id);
      EntityReferenceCollection entity2refs = (EntityReferenceCollection)context.InputParameters["RelatedEntities"];
      Trace(tracer, "Entity2 count: {0}", entity2refs.Count);

      Trace(tracer, "Get metadata for intersect relation: {0}", relationship);
      RetrieveRelationshipResponse relationshipmetadata = (RetrieveRelationshipResponse)service.Execute(new RetrieveRelationshipRequest() { Name = relationship.SchemaName });
      if (relationshipmetadata != null &amp;amp;&amp;amp; relationshipmetadata.RelationshipMetadata is ManyToManyRelationshipMetadata)
      {
      ManyToManyRelationshipMetadata mmrel = (ManyToManyRelationshipMetadata)relationshipmetadata.RelationshipMetadata;
      Trace(tracer, "Get intersect attribute names (we cannot know which entity is entity1 and which is entity2)");
      string entity1idattribute = mmrel.Entity1LogicalName == entity1ref.LogicalName ? mmrel.Entity1IntersectAttribute : mmrel.Entity2IntersectAttribute;
      string entity2idattribute = mmrel.Entity1LogicalName == entity1ref.LogicalName ? mmrel.Entity2IntersectAttribute : mmrel.Entity1IntersectAttribute;
      Trace(tracer, "Entiy1id: {0} Entity2id: {1}", entity1idattribute, entity2idattribute);

      Trace(tracer, "Verify if any of the new relations already exist");
      foreach (EntityReference entity2ref in entity2refs)
      {
      QueryByAttribute qba = new QueryByAttribute(relationship.SchemaName);
      qba.AddAttributeValue(entity1idattribute, entity1ref.Id);
      qba.AddAttributeValue(entity2idattribute, entity2ref.Id);
      EntityCollection existingAssociations = service.RetrieveMultiple(qba);
      Trace(tracer, "Found {0} existing relations", existingAssociations.Entities.Count);
      if (existingAssociations.Entities.Count &amp;gt; 0)
      {
      EntityReferenceCollection deleteRefs = new EntityReferenceCollection();
      deleteRefs.Add(entity2ref);
      Trace(tracer, "Disassociating entities");
      service.Execute(new DisassociateRequest()
      {
      Target = entity1ref,
      RelatedEntities = deleteRefs,
      Relationship = relationship
      });
      Trace(tracer, "Disassociated");
      }
      }
      }
      else
      {
      throw new InvalidPluginExecutionException("Metadata for relation " + relationship + " is not of type ManyToManyRelationshipMetadata");
      }
      Trace(tracer, "Done!");
      }
      catch (FaultException&amp;lt;OrganizationServiceFault&amp;gt; ex)
      {
      throw new InvalidPluginExecutionException(
      String.Format("An error occurred in plug-in {0}. {1}: {2}", this, ex, ex.Detail.Message));
      }
      }
      }

      private void Trace(ITracingService tracer, string format, params object[] args)
      {
      tracer.Trace(DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff") + " " + format, args);
      }
      }
      }

      &lt;/pre&gt;  &lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/3534158126191039150-1897077908610568276?l=jonasrapp.cinteros.se' alt='' /&gt;&lt;/div&gt;
    </content>
    <link rel='replies' type='application/atom+xml' href='http://jonasrapp.cinteros.se/feeds/1897077908610568276/comments/default' title='Post Comments'/>
    <link rel='replies' type='text/html' href='http://jonasrapp.cinteros.se/2012/07/adding-duplicates-in-nn-relations.html#comment-form' title='0 Comments'/>
    <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/1897077908610568276'/>
    <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/1897077908610568276'/>
    <link rel='alternate' type='text/html' href='http://jonasrapp.cinteros.se/2012/07/adding-duplicates-in-nn-relations.html' title='Adding Duplicates in N:N-Relations'/>
    <author>
      <name>Jonas Rapp</name>
      <uri>https://plus.google.com/109176631335910576528</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//lh6.googleusercontent.com/-R_XLzSOOvqs/AAAAAAAAAAI/AAAAAAAAAsk/wfsnAqqNsCw/s512-c/photo.jpg'/>
    </author>
    <media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://2.bp.blogspot.com/-fdAordYpK6E/T-r1yPdGB9I/AAAAAAAAAkI/uIQ3oOVr9DQ/s72-c/duplicate.png' height='72' width='72'/>
    <thr:total>0</thr:total>
  </entry>
  <entry>
    <id>tag:blogger.com,1999:blog-3534158126191039150.post-5362943094520094193</id>
    <published>2012-07-04T10:23:00.000+02:00</published>
    <updated>2012-10-22T15:42:41.285+02:00</updated>
    <title type='text'>The Welcome Post</title>
    <content type='html'>&lt;div style="text-align: center; clear: both" class="separator"&gt;&lt;a style="margin-bottom: 1em; float: right; margin-left: 1em; clear: right" href="http://2.bp.blogspot.com/-YiFS6ZxZ2jo/T-qrTH8w4uI/AAAAAAAAAj8/VAnf0i0ilpw/s1600/aladdin-choklad_24413390_170792762.jpg" imageanchor="1"&gt;&lt;img border="0" src="http://2.bp.blogspot.com/-YiFS6ZxZ2jo/T-qrTH8w4uI/AAAAAAAAAj8/VAnf0i0ilpw/s1600/aladdin-choklad_24413390_170792762.jpg"&gt;&lt;/a&gt;&lt;/div&gt;There must be a Welcome Post.&lt;br&gt;So this is it.&lt;br&gt;&lt;br&gt;&lt;b&gt;Welcome to my blog about development on the Microsoft Dynamics CRM platform!&lt;/b&gt;&lt;br&gt;&lt;br&gt;The blog will focus on plugin development in C# and UI development in javascript, but in the words of mama Gump - &lt;i&gt;Ya never know what'ya gonna get&lt;/i&gt;.   &lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/3534158126191039150-5362943094520094193?l=jonasrapp.cinteros.se' alt='' /&gt;&lt;/div&gt;</content>
    <link rel='related' href='http://jonasrapp.cinteros.se/2012/07/the-welcome-post.html' title='The Welcome Post'/>
    <link rel='replies' type='application/atom+xml' href='http://jonasrapp.cinteros.se/feeds/5362943094520094193/comments/default' title='Post Comments'/>
    <link rel='replies' type='text/html' href='http://jonasrapp.cinteros.se/2012/07/the-welcome-post.html#comment-form' title='4 Comments'/>
    <link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/5362943094520094193'/>
    <link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/3534158126191039150/posts/default/5362943094520094193'/>
    <link rel='alternate' type='text/html' href='http://jonasrapp.cinteros.se/2012/07/the-welcome-post.html' title='The Welcome Post'/>
    <author>
      <name>Jonas Rapp</name>
      <uri>https://plus.google.com/109176631335910576528</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//lh6.googleusercontent.com/-R_XLzSOOvqs/AAAAAAAAAAI/AAAAAAAAAsk/wfsnAqqNsCw/s512-c/photo.jpg'/>
    </author>
    <media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://2.bp.blogspot.com/-YiFS6ZxZ2jo/T-qrTH8w4uI/AAAAAAAAAj8/VAnf0i0ilpw/s72-c/aladdin-choklad_24413390_170792762.jpg' height='72' width='72'/>
    <thr:total>4</thr:total>
  </entry>
</feed>